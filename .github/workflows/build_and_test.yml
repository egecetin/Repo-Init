name: Build and test
on: [push, pull_request]

env:
  BUILD_DIR: build

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install cppcheck
      - uses: pre-commit/action@v3.0.0

  linux-gnu:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Prepare System
        run: |
          sudo apt update
          sudo apt install gcovr expect libcurl4-openssl-dev -y
          # Rawsocket requires privileges
          chmod 4755 /usr/bin/ctest
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"
      - name: Install Test Requirements
        run: pip install -r tests/data/requirements.txt
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug -S . -B $BUILD_DIR
      - name: Build
        run: cmake --build $BUILD_DIR --parallel --target coverage-xml
      - name: Process Results
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./build/coverage-xml.xml
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  linux-intel:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Prepare System
        run: |
          sudo apt update
          sudo apt install gcovr expect libcurl4-openssl-dev -y
          # Rawsocket requires privileges
          chmod 4755 /usr/bin/ctest
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.x"
      - name: Install Test Requirements
        run: |
          pip install -r tests/data/requirements.txt
      - name: Prepare Intel apt repository
        run: |
          wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update -o Dir::Etc::sourcelist="sources.list.d/oneAPI.list" -o APT::Get::List-Cleanup="0"
      - name: Prepare dependencies
        run: apt-cache depends intel-oneapi-compiler-dpcpp-cpp | tee intel-dependencies.txt
      - name: Cache Install oneAPI
        id: cache-install
        uses: actions/cache@v3
        with:
          path: /opt/intel/oneapi
          key: oneapi-${{ hashFiles('**/intel-dependencies.txt') }}
      - name: Direct Install oneAPI
        if: steps.cache-install.outputs.cache-hit != 'true'
        run: |
          sudo apt-get install -y intel-oneapi-compiler-dpcpp-cpp
          sudo apt-get clean
      - name: Set variables
        run: |
          . /opt/intel/oneapi/setvars.sh
          printenv >> $GITHUB_ENV
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=icx -DCMAKE_CXX_COMPILER=icpx -S . -B $BUILD_DIR
      - name: Build
        run: cmake --build $BUILD_DIR --parallel
      - name: Run Tests
        run: ctest --test-dir $BUILD_DIR

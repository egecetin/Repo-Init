name: Build and test
on:
  push:
    branches:
    - 'master'
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    container: egecetinn/ubuntu2204
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - uses: pre-commit/action@v3.0.0
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -S . -B build
      - name: Clang-tidy
        run: run-clang-tidy -j`nproc` -p=build -header-filter=`pwd`/include/ src/*.cpp src/**/*.cpp

  coverage:
    runs-on: ubuntu-latest
    container: egecetinn/ubuntu2204
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Install Test Requirements
        run: pip install -r tests/data/requirements.txt
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Debug -DXXX_ENABLE_COVERAGE=ON -DXXX_ENABLE_MEMLEAK_CHECK=ON -DXXX_ENABLE_ASAN=OFF -DXXX_ENABLE_USAN=OFF -S . -B build
      - name: Build
        run: cmake --build build --parallel --target coverage-xml
      - name: Upload to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./build/coverage-xml.xml
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  rockylinux:
    runs-on: ubuntu-latest
    container: egecetinn/${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: rockylinux87
          - image: rockylinux91

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Install Test Requirements
        run: pip3 install -r tests/data/requirements.txt
      - name: Configure
        run: cmake -DCMAKE_BUILD_TYPE=Release ${{ matrix.additional-flags }} -S . -B build
      - name: Build
        run: cmake --build build --parallel
      - name: Run Tests
        id: test-step
        run: ctest --output-on-failure --test-dir build

name: Build and test
on:
  push:
    branches:
    - 'master'
  pull_request:

permissions:
  contents: read

jobs:
  clang-tidy:
    runs-on: ubuntu-latest
    container: egecetinn/ubuntu2204
    steps:
      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Configure
        run: cmake -S . -B build
      - name: Clang-tidy
        run: run-clang-tidy -j`nproc` -p=build -header-filter=`pwd`/include/ src/*.cpp src/**/*.cpp

  format:
    runs-on: ubuntu-latest
    container: egecetinn/alpine
    steps:
      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Run clang-format
        run: clang-format include/**/*.hpp src/*.cpp src/**/*.cpp --verbose --dry-run --Werror
      - name: Run cppcheck
        run: cppcheck -Iinclude/ src --verbose --enable=all --error-exitcode=1 --std=c++14 --language=c++ --suppressions-list=cppcheckSuppressions.txt --inline-suppr

  memleak:
    runs-on: ubuntu-latest
    container: egecetinn/ubuntu2204
    steps:
      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Configure
        run: cmake -DXXX_ENABLE_MEMLEAK_CHECK=ON -S . -B build
      - name: Build
        run: cmake --build build --parallel
      - name: Run tests
        run: ctest --output-on-failure --test-dir build

  fuzzer:
    runs-on: ubuntu-latest
    container: egecetinn/ubuntu2204
    # Create matrix for ASAN, UBSAN, MSAN, TSAN
    steps:
      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Configure
        run: cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DXXX_BUILD_UNITTESTS=OFF -DXXX_BUILD_FUZZTESTS=ON -S . -B build
      - name: Build
        run: cmake --build build --parallel
      - name: Run tests
        run: ctest --output-on-failure --test-dir build
      # Upload regressions if failed

  rockylinux:
    runs-on: ubuntu-latest
    container: egecetinn/${{ matrix.image }}
    strategy:
      matrix:
        include:
          - image: rockylinux8
          - image: rockylinux8-icx
          - image: rockylinux9
          - image: rockylinux9-icx

    steps:
      - name: Checkout Code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Install Test Requirements
        run: pip3 install -r tests/data/requirements.txt
      - name: Configure
        run: cmake -S . -B build
      - name: Build
        run: cmake --build build --parallel
      - name: Run Tests
        id: test-step
        run: ctest --output-on-failure --test-dir build

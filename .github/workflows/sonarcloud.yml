name: Sonarcloud Analysis
on:
  schedule:
    - cron: '21 9 * * 4'
  push:
    branches:
    - 'master'
  pull_request:

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    container: egecetinn/ubuntu2204
    env:
      BUILD_WRAPPER_OUT_DIR: build/sonar
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout Code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0
          submodules: recursive
      - name: Prepare
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Install Test Requirements
        run: pip install -r tests/data/requirements.txt
      - name: Install sonar-scanner and build-wrapper
        uses: sonarsource/sonarcloud-github-c-cpp@e4882e1621ad2fb48dddfa48287411bed34789b1 # v2.0.2
      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DXXX_ENABLE_COVERAGE=ON -DXXX_ENABLE_MEMLEAK_CHECK=ON
      - name: Run build-wrapper
        run: build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ --config Debug --parallel --target coverage-xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" --define sonar.coverageReportPaths=./build/coverage-xml-sonar.xml
